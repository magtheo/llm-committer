{
  "name": "llm-committer",
  "displayName": "LLM-Committer",
  "description": "VSCode extension for generating commit messages using an LLM",
  "version": "1.0.1",
  "publisher": "magtheo",
  "license": "SEE LICENSE IN LICENSE",
  "icon": "images/llm-committer-logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/magtheo/llm-committer.git"
  },
  "bugs": {
    "url": "https://github.com/magtheo/llm-committer/issues"
  },
  "homepage": "https://github.com/magtheo/llm-committer#readme",
  "keywords": [
    "git",
    "commit",
    "llm",
    "ai",
    "openai",
    "anthropic",
    "gemini",
    "openrouter",
    "developer tools",
    "source control",
    "commit message generator",
    "conventional commits"
  ],
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "activationEvents": [
    "onView:llmCommitterView"
  ],
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "npm run build:webview && npm run build:extension",
    "build:webview": "vite build",
    "build:extension": "tsc -p tsconfig.json",
    "dev": "concurrently \"vite build --watch\" \"tsc -watch -p ./\"",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "llm-committer",
          "title": "LLM Committer",
          "icon": "$(robot)"
        }
      ]
    },
    "views": {
      "llm-committer": [
        {
          "type": "webview",
          "id": "llmCommitterView",
          "name": "Git Changes",
          "when": "workspaceFolderCount > 0"
        }
      ]
    },
    "commands": [
      {
        "command": "llm-committer.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "llm-committer.settings",
        "title": "Settings",
        "icon": "$(gear)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "llm-committer.refresh",
          "when": "view == llmCommitterView",
          "group": "navigation"
        },
        {
          "command": "llm-committer.settings",
          "when": "view == llmCommitterView",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "LLM Committer",
      "properties": {
        "llmCommitter.llmProvider": {
          "type": "string",
          "default": "openai",
          "enum": [
            "openai",
            "anthropic",
            "gemini",
            "openrouter"
          ],
          "enumDescriptions": [
            "OpenAI (GPT models)",
            "Anthropic (Claude models)",
            "Google (Gemini models)",
            "OpenRouter (Various models)"
          ],
          "description": "AI provider to use for generating commit messages."
        },
        "llmCommitter.llmInstructions": {
          "type": "string",
          "default": "",
          "description": "Custom instructions for the LLM when generating commit messages. Leave empty to use default instructions.",
          "scope": "resource"
        },
        "llmCommitter.llmModel": {
          "type": "string",
          "default": "gpt-4o-mini",
          "description": "Model to use for generating commit messages. Available models depend on the selected provider.",
          "scope": "resource"
        },
        "llmCommitter.maxTokens": {
          "type": "number",
          "default": 4000,
          "minimum": 1000,
          "maximum": 8000,
          "description": "Maximum number of tokens to use for the entire LLM request.",
          "scope": "resource"
        },
        "llmCommitter.temperature": {
          "type": "number",
          "default": 0.3,
          "minimum": 0,
          "maximum": 1,
          "description": "Temperature setting for LLM creativity (0 = consistent, 1 = creative).",
          "scope": "resource"
        },
        "llmCommitter.openRouterRefererUrl": {
          "type": "string",
          "default": "http://localhost",
          "description": "HTTP Referer URL to use for OpenRouter API calls (optional, but recommended by OpenRouter). Set your extension ID or website URL here for production.",
          "scope": "machine-overridable"
        }
      }
    }
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/react": "^19.1.4",
    "@types/react-dom": "^19.1.5",
    "@types/vscode": "^1.100.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vitejs/plugin-react": "^4.4.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^2.27.0",
    "concurrently": "^9.1.2",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3",
    "vite": "^6.3.5"
  },
  "dependencies": {
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "vsce": "^2.15.0"
  }
}
